{
  "Resources": {
    "ddbFFDD78E5": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "Key",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "Key",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/ddb/Resource"
      }
    },
    "sqsDLQ99818123": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "VisibilityTimeout": 3600
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/sqs_DLQ/Resource"
      }
    },
    "sqsqueue2C45FF35": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "sqsDLQ99818123",
              "Arn"
            ]
          },
          "maxReceiveCount": 24
        },
        "VisibilityTimeout": 3600
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/sqs_queue/Resource"
      }
    },
    "sqsqueuePolicy662AC55F": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "s3bucketFBFA637E",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "sqsqueue2C45FF35",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "sqsqueue2C45FF35"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/sqs_queue/Policy/Resource"
      }
    },
    "lambdaFunctionServiceRoleF7E54F17": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/lambdaFunction/ServiceRole/Resource"
      }
    },
    "lambdaFunctionServiceRoleDefaultPolicy0958DD5A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ddbFFDD78E5",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "sqsqueue2C45FF35",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucketFBFA637E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucketFBFA637E",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lambdaFunctionServiceRoleDefaultPolicy0958DD5A",
        "Roles": [
          {
            "Ref": "lambdaFunctionServiceRoleF7E54F17"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/lambdaFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lambdaFunction940E68AD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0S3Bucket03B749E1"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0S3VersionKey5C369B59"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0S3VersionKey5C369B59"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "lambda_function.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "lambdaFunctionServiceRoleF7E54F17",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "ddbFFDD78E5"
            },
            "queue_name": {
              "Fn::GetAtt": [
                "sqsqueue2C45FF35",
                "QueueName"
              ]
            },
            "Des_bucket_default": "hawkey999",
            "Des_prefix_default": "s3-migration-from-us",
            "Des_region": "cn-northwest-1",
            "StorageClass": "STANDARD",
            "aws_access_key_id": "xxxxxxxxx",
            "aws_secret_access_key": "xxxxxxxxxxxxxxx"
          }
        },
        "MemorySize": 1024,
        "Timeout": 900
      },
      "DependsOn": [
        "lambdaFunctionServiceRoleDefaultPolicy0958DD5A",
        "lambdaFunctionServiceRoleF7E54F17"
      ],
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/lambdaFunction/Resource",
        "aws:asset:path": "asset.973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0",
        "aws:asset:property": "Code"
      }
    },
    "lambdaFunctionSqsEventSources3migrationserverlesssqsqueue6058AC4ED2ACCC3A": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "sqsqueue2C45FF35",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "lambdaFunction940E68AD"
        }
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/lambdaFunction/SqsEventSource:s3migrationserverlesssqsqueue6058AC4E/Resource"
      }
    },
    "s3bucketFBFA637E": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/s3bucket/Resource"
      }
    },
    "s3bucketNotifications7E3FF01B": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucketFBFA637E"
        },
        "NotificationConfiguration": {
          "QueueConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "QueueArn": {
                "Fn::GetAtt": [
                  "sqsqueue2C45FF35",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "sqsqueuePolicy662AC55F",
        "sqsqueue2C45FF35"
      ],
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/s3bucket/Notifications/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies\n    const s3 = new (require('aws-sdk').S3)();\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const https = require(\"https\");\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const url = require(\"url\");\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse(\"FAILED\", err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse(\"SUCCESS\");\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // tslint:disable-next-line:max-line-length\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error messge as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || \"See the details in CloudWatch Log Stream: \" + context.logStreamName,\n            PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: \"PUT\",\n            headers: {\n                \"content-type\": \"\",\n                \"content-length\": responseBody.length\n            }\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on(\"error\", (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "s3-migration-serverless/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    }
  },
  "Parameters": {
    "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0S3Bucket03B749E1": {
      "Type": "String",
      "Description": "S3 bucket for asset \"973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0\""
    },
    "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0S3VersionKey5C369B59": {
      "Type": "String",
      "Description": "S3 key for asset version \"973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0\""
    },
    "AssetParameters973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0ArtifactHash8FFD8B0A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"973c15be33b384425735f830f4e93d4b2f6c80155bcb8638dd8c8697120832e0\""
    }
  },
  "Outputs": {
    "DynamoDBTable": {
      "Value": {
        "Ref": "ddbFFDD78E5"
      }
    },
    "SQSJobQueue": {
      "Value": {
        "Fn::GetAtt": [
          "sqsqueue2C45FF35",
          "QueueName"
        ]
      }
    },
    "SQSJobQueueDLQ": {
      "Value": {
        "Fn::GetAtt": [
          "sqsDLQ99818123",
          "QueueName"
        ]
      }
    },
    "WorkerLambdaFunction": {
      "Value": {
        "Ref": "lambdaFunction940E68AD"
      }
    },
    "NewS3Bucket": {
      "Value": {
        "Ref": "s3bucketFBFA637E"
      }
    }
  }
}